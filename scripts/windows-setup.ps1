# PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Kubernetes Learning –Ω–∞ Windows 11

Write-Host "üöÄ === –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Kubernetes Learning Project –Ω–∞ Windows 11 ===" -ForegroundColor Green
Write-Host "================================================================" -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
if (-NOT ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")) {
    Write-Host "‚ùå –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –æ—Ç –∏–º–µ–Ω–∏ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!" -ForegroundColor Red
    Write-Host "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ PowerShell –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞." -ForegroundColor Yellow
    exit 1
}

Write-Host "`nüìã 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Minikube..." -ForegroundColor Yellow
$minikube_status = minikube status 2>$null
if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Minikube –∑–∞–ø—É—â–µ–Ω" -ForegroundColor Green
    $minikube_ip = minikube ip
    Write-Host "IP Minikube: $minikube_ip" -ForegroundColor Cyan
} else {
    Write-Host "‚ö†Ô∏è  Minikube –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ó–∞–ø—É—Å–∫–∞—é..." -ForegroundColor Yellow
    Write-Host "–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç..." -ForegroundColor Cyan
    minikube start --driver=docker --memory=4096 --cpus=2
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Minikube —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!" -ForegroundColor Green
        $minikube_ip = minikube ip
        Write-Host "IP Minikube: $minikube_ip" -ForegroundColor Cyan
    } else {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Minikube. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:" -ForegroundColor Red
        Write-Host "  minikube delete" -ForegroundColor Yellow
        Write-Host "  minikube start --driver=docker" -ForegroundColor Yellow
        exit 1
    }
}

Write-Host "`nüìã 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ Ingress Controller..." -ForegroundColor Yellow
$ingress_enabled = minikube addons list | Select-String "ingress.*enabled"
if ($ingress_enabled) {
    Write-Host "‚úÖ Ingress Controller –≤–∫–ª—é—á–µ–Ω" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è  –í–∫–ª—é—á–∞—é Ingress Controller..." -ForegroundColor Yellow
    minikube addons enable ingress
    Write-Host "‚úÖ Ingress Controller –≤–∫–ª—é—á–µ–Ω" -ForegroundColor Green
}

Write-Host "`nüìã 3. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π–ª–∞ hosts..." -ForegroundColor Yellow
$hostsPath = "C:\Windows\System32\drivers\etc\hosts"
$hostsContent = Get-Content $hostsPath -ErrorAction SilentlyContinue

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ –∑–∞–ø–∏—Å–∏ Kubernetes
$kubernetesEntries = $hostsContent | Select-String "grafana.local"

if ($kubernetesEntries) {
    Write-Host "‚ö†Ô∏è  –û–±–Ω–æ–≤–ª—è—é —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏..." -ForegroundColor Yellow
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏ Kubernetes
    $newContent = $hostsContent | Where-Object { $_ -notmatch "grafana.local|prometheus.local|alertmanager.local|metrics-app.local" }
} else {
    $newContent = $hostsContent
    Write-Host "‚ûï –î–æ–±–∞–≤–ª—è—é –Ω–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏..." -ForegroundColor Yellow
}

# –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏
$kubernetesHosts = @(
    "",
    "# Kubernetes local services", 
    "$minikube_ip grafana.local",
    "$minikube_ip prometheus.local", 
    "$minikube_ip alertmanager.local",
    "$minikube_ip metrics-app.local",
    "# End Kubernetes local services"
)

$finalContent = $newContent + $kubernetesHosts

try {
    $finalContent | Out-File -FilePath $hostsPath -Encoding ASCII
    Write-Host "‚úÖ –§–∞–π–ª hosts –æ–±–Ω–æ–≤–ª–µ–Ω!" -ForegroundColor Green
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª hosts: $_" -ForegroundColor Red
    Write-Host "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å PowerShell –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä" -ForegroundColor Yellow
}

Write-Host "`nüìã 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..." -ForegroundColor Yellow
$pods = kubectl get pods -n monitoring --no-headers 2>$null
if ($pods) {
    $runningPods = ($pods -split "`n" | Where-Object { $_ -match "Running" }).Count
    $totalPods = ($pods -split "`n").Count
    Write-Host "‚úÖ –ü–æ–¥—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: $runningPods/$totalPods –∑–∞–ø—É—â–µ–Ω—ã" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è  –ü–æ–¥—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –í–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å—Ç–µ–∫." -ForegroundColor Yellow
}

Write-Host "`nüìã 5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π..." -ForegroundColor Yellow

# –¢–µ—Å—Ç NodePort –¥–ª—è Grafana
Write-Host "–¢–µ—Å—Ç–∏—Ä—É—é Grafana NodePort (31282)..." -ForegroundColor Cyan
$grafanaTest = Test-NetConnection -ComputerName $minikube_ip -Port 31282 -WarningAction SilentlyContinue
if ($grafanaTest.TcpTestSucceeded) {
    Write-Host "‚úÖ Grafana NodePort –¥–æ—Å—Ç—É–ø–µ–Ω: http://$minikube_ip:31282" -ForegroundColor Green
} else {
    Write-Host "‚ùå Grafana NodePort –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω" -ForegroundColor Red
}

# –¢–µ—Å—Ç DNS —Ä–µ–∑–æ–ª–≤–∏–Ω–≥–∞
Write-Host "–¢–µ—Å—Ç–∏—Ä—É—é DNS —Ä–µ–∑–æ–ª–≤–∏–Ω–≥..." -ForegroundColor Cyan
try {
    $dnsTest = Resolve-DnsName -Name "grafana.local" -ErrorAction Stop
    Write-Host "‚úÖ DNS —Ä–µ–∑–æ–ª–≤–∏–Ω–≥ —Ä–∞–±–æ—Ç–∞–µ—Ç: grafana.local -> $($dnsTest.IPAddress)" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è  DNS —Ä–µ–∑–æ–ª–≤–∏–Ω–≥ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä—è–º–æ–π IP" -ForegroundColor Yellow
}

Write-Host "`nüéØ === –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ===" -ForegroundColor Green
Write-Host "=============================" -ForegroundColor Green

Write-Host "`nüìä –î–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–∏—Å–∞–º:" -ForegroundColor White
Write-Host "  ‚Ä¢ Grafana (DNS):     https://grafana.local" -ForegroundColor Cyan
Write-Host "  ‚Ä¢ Grafana (Direct):  http://$minikube_ip:31282" -ForegroundColor Cyan
Write-Host "  ‚Ä¢ Prometheus (DNS):  https://prometheus.local" -ForegroundColor Cyan
Write-Host "  ‚Ä¢ Alertmanager (DNS): https://alertmanager.local" -ForegroundColor Cyan
Write-Host "`nüîë –õ–æ–≥–∏–Ω Grafana: admin / –ü–∞—Ä–æ–ª—å: admin123" -ForegroundColor Yellow

Write-Host "`nüõ†Ô∏è  –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:" -ForegroundColor White
Write-Host "  minikube status                    # –°—Ç–∞—Ç—É—Å –∫–ª–∞—Å—Ç–µ—Ä–∞" -ForegroundColor Gray
Write-Host "  minikube ip                       # IP –∞–¥—Ä–µ—Å –∫–ª–∞—Å—Ç–µ—Ä–∞" -ForegroundColor Gray
Write-Host "  kubectl get pods -n monitoring    # –°—Ç–∞—Ç—É—Å –ø–æ–¥–æ–≤" -ForegroundColor Gray
Write-Host "  minikube dashboard                # Web UI –∫–ª–∞—Å—Ç–µ—Ä–∞" -ForegroundColor Gray

Write-Host "`nüîß –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:" -ForegroundColor White
Write-Host "  1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Minikube:       minikube stop && minikube start" -ForegroundColor Gray
Write-Host "  2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ port-forward:     kubectl port-forward -n monitoring svc/prometheus-grafana 3000:80" -ForegroundColor Gray
Write-Host "  3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å/—Ñ–∞–π—Ä–≤–æ–ª" -ForegroundColor Gray

Write-Host "`n‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å Grafana –≤ –±—Ä–∞—É–∑–µ—Ä–µ." -ForegroundColor Green

# –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä
$openBrowser = Read-Host "`n–û—Ç–∫—Ä—ã—Ç—å Grafana –≤ –±—Ä–∞—É–∑–µ—Ä–µ? (y/n)"
if ($openBrowser -eq 'y' -or $openBrowser -eq 'Y' -or $openBrowser -eq '') {
    Write-Host "–û—Ç–∫—Ä—ã–≤–∞—é –±—Ä–∞—É–∑–µ—Ä..." -ForegroundColor Cyan
    Start-Process "http://$minikube_ip:31282"
}

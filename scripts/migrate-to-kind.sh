#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ —Å Minikube –Ω–∞ Kind –¥–ª—è –ª—É—á—à–µ–≥–æ –≤–Ω–µ—à–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞

set -e

echo "üöÄ === –ú–∏–≥—Ä–∞—Ü–∏—è —Å Minikube –Ω–∞ Kind ==="
echo "===================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ Kind —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
if ! command -v kind &> /dev/null; then
    echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é Kind..."
    curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
    chmod +x ./kind
    sudo mv ./kind /usr/local/bin/kind
    echo "‚úÖ Kind —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
fi

echo ""
echo "üíæ 1. –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Minikube..."

# –°–æ–∑–¥–∞–µ–º backup –ø–∞–ø–∫—É
mkdir -p backup/minikube-config

# –°–æ—Ö—Ä–∞–Ω—è–µ–º Helm values
if helm list -n monitoring | grep -q prometheus; then
    echo "üìã –°–æ—Ö—Ä–∞–Ω—è—é Helm values..."
    helm get values prometheus -n monitoring > backup/minikube-config/prometheus-values.yaml
    echo "‚úÖ Helm values —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ backup/minikube-config/"
fi

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–∞–∂–Ω—ã–µ –º–∞–Ω–∏—Ñ–µ—Å—Ç—ã
echo "üìã –°–æ—Ö—Ä–∞–Ω—è—é –∫–∞—Å—Ç–æ–º–Ω—ã–µ –º–∞–Ω–∏—Ñ–µ—Å—Ç—ã..."
cp -r manifests/ backup/minikube-config/
echo "‚úÖ –ú–∞–Ω–∏—Ñ–µ—Å—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã"

echo ""
echo "üõë 2. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Minikube (–Ω–µ —É–¥–∞–ª—è–µ–º - –º–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å—Å—è)..."
minikube stop || echo "Minikube —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

echo ""
echo "üê≥ 3. –ü—Ä–æ–≤–µ—Ä—è—é Docker..."
if ! docker ps &>/dev/null; then
    echo "‚ùå Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω! –ó–∞–ø—É—Å—Ç–∏—Ç–µ Docker –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
fi
echo "‚úÖ Docker —Ä–∞–±–æ—Ç–∞–µ—Ç"

echo ""
echo "‚öôÔ∏è  4. –°–æ–∑–¥–∞—é Kind –∫–ª–∞—Å—Ç–µ—Ä —Å –≤–Ω–µ—à–Ω–∏–º –¥–æ—Å—Ç—É–ø–æ–º..."
cat << EOF | kind create cluster --config=-
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
name: learning-cluster
networking:
  podSubnet: "10.244.0.0/16"
  serviceSubnet: "10.96.0.0/12"
nodes:
- role: control-plane
  extraPortMappings:
  - containerPort: 30080
    hostPort: 3000
    protocol: TCP
  - containerPort: 30090  
    hostPort: 9090
    protocol: TCP
  - containerPort: 30093
    hostPort: 9093
    protocol: TCP
  - containerPort: 80
    hostPort: 8080
    protocol: TCP
  - containerPort: 443
    hostPort: 8443
    protocol: TCP
EOF

echo "‚úÖ Kind –∫–ª–∞—Å—Ç–µ—Ä —Å–æ–∑–¥–∞–Ω!"

echo ""
echo "üîß 5. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é kubectl context..."
kubectl config use-context kind-learning-cluster
echo "‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω –Ω–∞ Kind –∫–ª–∞—Å—Ç–µ—Ä"

echo ""
echo "üìã 6. –ü—Ä–æ–≤–µ—Ä—è—é —Å—Ç–∞—Ç—É—Å –∫–ª–∞—Å—Ç–µ—Ä–∞..."
kubectl get nodes
kubectl cluster-info

echo ""
echo "üì¶ 7. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é Ingress Controller..."
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml

echo "‚è±Ô∏è  –û–∂–∏–¥–∞—é –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Ingress Controller..."
kubectl wait --namespace ingress-nginx \
  --for=condition=ready pod \
  --selector=app.kubernetes.io/component=controller \
  --timeout=90s

echo "‚úÖ Ingress Controller –≥–æ—Ç–æ–≤!"

echo ""
echo "üìä 8. –î–æ–±–∞–≤–ª—è—é Helm —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..."
helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
helm repo update

echo ""
echo "üéØ 9. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–æ—Ä—Ç–∞–º–∏..."
helm install prometheus prometheus-community/kube-prometheus-stack \
    --namespace monitoring \
    --create-namespace \
    --set grafana.adminPassword=admin123 \
    --set grafana.service.type=NodePort \
    --set grafana.service.nodePort=30080 \
    --set prometheus.service.type=NodePort \
    --set prometheus.service.nodePort=30090 \
    --set alertmanager.service.type=NodePort \
    --set alertmanager.service.nodePort=30093 \
    --wait --timeout=10m

echo ""
echo "üéâ === –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! ==="

# –ü–æ–ª—É—á–∞–µ–º –≤–Ω–µ—à–Ω–∏–π IP
EXTERNAL_IP=$(hostname -I | awk '{print $1}')
echo ""
echo "üåü –¢–µ–ø–µ—Ä—å —Å–µ—Ä–≤–∏—Å—ã –¥–æ—Å—Ç—É–ø–Ω—ã –ë–ï–ó port-forward:"
echo "  üìä Grafana:      http://$EXTERNAL_IP:3000 (admin/admin123)"
echo "  üìà Prometheus:   http://$EXTERNAL_IP:9090"
echo "  üö® Alertmanager: http://$EXTERNAL_IP:9093"
echo ""
echo "üìã –¢–∞–∫–∂–µ –¥–æ—Å—Ç—É–ø–Ω—ã —á–µ—Ä–µ–∑ localhost –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:"
echo "  üìä Grafana:      http://localhost:3000"
echo "  üìà Prometheus:   http://localhost:9090"
echo "  üö® Alertmanager: http://localhost:9093"

echo ""
echo "‚ö° –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ Kind vs Minikube:"
echo "  ‚úÖ –ë—ã—Å—Ç—Ä–µ–µ –∑–∞–ø—É—Å–∫ (30—Å–µ–∫ vs 3–º–∏–Ω)"
echo "  ‚úÖ –ú–µ–Ω—å—à–µ —Ä–µ—Å—É—Ä—Å–æ–≤ (Docker vs VM)"
echo "  ‚úÖ –ü—Ä–æ—Å—Ç–æ–π –≤–Ω–µ—à–Ω–∏–π –¥–æ—Å—Ç—É–ø"
echo "  ‚úÖ –ù–µ—Ç –ø—Ä–æ–±–ª–µ–º —Å port-forward"
echo "  ‚úÖ –°—Ç–∞–±–∏–ª—å–Ω–∞—è —Å–µ—Ç—å"

echo ""
echo "üîÑ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Kind –∫–ª–∞—Å—Ç–µ—Ä–æ–º:"
echo "  kind get clusters                    # –°–ø–∏—Å–æ–∫ –∫–ª–∞—Å—Ç–µ—Ä–æ–≤"
echo "  kind delete cluster --name=learning-cluster  # –£–¥–∞–ª–∏—Ç—å"
echo "  kubectl config get-contexts         # –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç—ã"
echo "  kubectl config use-context minikube # –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ Minikube"

echo ""
echo "üí° –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ Minikube:"
echo "  minikube start"
echo "  kubectl config use-context minikube"

echo ""
echo "üéØ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å Grafana: http://$EXTERNAL_IP:3000"
